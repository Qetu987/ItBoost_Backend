name: Django CI/CD

on:
  push:
    branches:
      - main  # или любая другая ветка, на которую вы хотите настроить деплой

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      db:
        image: postgres
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
        ports:
          - 5432:5432
    steps:
    - name: Check database connection
      run: |
        echo "Checking database connection..."
        PGPASSWORD=${{ secrets.POSTGRES_PASSWORD }} psql -h "db" -U "${{ secrets.POSTGRES_USER }}" -d "${{ secrets.POSTGRES_DB }}" -c '\q' || echo "Failed to connect"

    
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Wait for database to be ready
      run: |
        #!/bin/bash
        set -e
        for i in {1..30}; do
          if PGPASSWORD=${{ secrets.POSTGRES_PASSWORD }} psql -h "db" -U "${{ secrets.POSTGRES_USER }}" -d "${{ secrets.POSTGRES_DB }}" -c '\q'; then
            echo "Postgres is up"
            break
          fi
          echo "Postgres is unavailable - sleeping"
          sleep 5
        done

    - name: Run migrations
      env:
        DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
        DJANGO_ALLOWED_HOSTS: ${{ secrets.DJANGO_ALLOWED_HOSTS }}
      run: python manage.py migrate

    - name: Run tests
      env:
        DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
        DJANGO_ALLOWED_HOSTS: ${{ secrets.DJANGO_ALLOWED_HOSTS }}
      run: python manage.py test
